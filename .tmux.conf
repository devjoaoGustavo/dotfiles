# setup colors and default shell
# set-option -g default-shell /usr/bin/zsh
set-option -g default-terminal "tmux-256color"

set-option -sa terminal-overrides ',xterm*:RGB'
set-option -ga terminal-overrides ',xterm*:Tc'

set-option -g mouse on
set-option -sg escape-time 10
set-option -g allow-rename off
set-option -g base-index 1
set-option -sg focus-events off

set -g status-interval 1

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

bind-key C-o rotate-window
bind c new-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'
bind-key enter next-layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
bind-key : command-prompt

bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1

bind 'C-l' send-keys 'C-l'
bind 'C-h' send-keys 'C-h'

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# bind a reload key
bind r source-file ~/.tmux.conf

# split panes using | and -
bind / split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# start window numbers at 1 to match keyboard order with tmux window order
set-window-option -g pane-base-index 1
set -g renumber-windows on

# VIM mode
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -i -selection clipboard"
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xclip -i -selection clipboard"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# set-option -g status-position top

set -g status-bg black
set -g status-fg colour0

set-option -g pane-active-border-style 'bg=default fg=#B26818'
set-option -g pane-border-format "bg=default fg=black"

set-option -g display-panes-active-colour blue
set-option -g display-panes-colour brightred

set-option -g status-left-length 20
set -g status-left '#[bg=black, fg=brightwhite] @devjoaogustavo '
set -g status-right '#[bg=black, fg=brightwhite](#(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD))'
set -g window-status-current-format '#[bg=yellow, fg=black] #W '
set -g window-status-format '#[bg=black, fg=brightwhite] #I/#W'
