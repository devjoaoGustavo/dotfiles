# setup colors and default shell
set -g default-terminal "screen-256color"

# enable mouse navigation and resize panes
set-option -g mouse on
set-option -g base-index 1
set-option -sg focus-events off
set-option -sg escape-time 10
# dont forget: brew install reattach-to-user-namespace
set-option -g default-command "reattach-to-user-namespace -l bash"

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# bind a reload key
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

# new window in workspace
bind c new-window -c "$HOME/workspace"

# perform bind C-l to `clear` the scree
bind C-l send-keys 'C-l'

# split panes using | and -
bind / split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
unbind '"'
unbind %

# start window numbers at 1 to match keyboard order with tmux window order
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# VIM mode
# Use vim keybindings in copy mode

setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection     # Begin selection in copy mode.
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle  # Begin selection in copy mode.
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key C-o rotate-window
bind-key v split-window -h
bind-key s split-window -v
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout
bind-key : command-prompt

# status bar personalizations
# default statusbar colors
set-option -g status-style "bg=white,fg=blue"
# pane border
set-option -g pane-border-style "fg=white"
set-option -g pane-active-border-style "fg=brightcyan"
set-option -g message-style "bg=white,fg=brightred"
set-window-option -g window-status-current-style "fg=brightred,bg=default"

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# small tweaks
set-option -g status-left-length 20
set -g window-status-current-format '#[bg=white, fg=black] •/#W'
set -g window-status-format ' #I/#W'

# Status Bar
set-option -g status-interval 1
set-option -g status-style "bg=black,fg=white"
set -g status-left '#[bg=black, fg=white] #(whoami) #[bg=white,fg=black]'
set -g status-right '#[bg=white,fg=black]#[bg=black, fg=white] %H:%M ⏰'

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

